<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LY.Report.Core</name>
    </assembly>
    <members>
        <member name="M:LY.Report.Core.Aop.TransactionAsyncInterceptor.InterceptSynchronous(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截同步执行的方法
            </summary>
            <param name="invocation"></param>
        </member>
        <member name="M:LY.Report.Core.Aop.TransactionAsyncInterceptor.InterceptAsynchronous(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截返回结果为Task的方法
            </summary>
            <param name="invocation"></param>
        </member>
        <member name="M:LY.Report.Core.Aop.TransactionAsyncInterceptor.InterceptAsynchronous``1(Castle.DynamicProxy.IInvocation)">
            <summary>
            拦截返回结果为Task TResult 的方法
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="invocation"></param>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.BaseApiController">
            <summary>
            基础API控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.Record.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.Record.Controllers.RecordLocationController">
            <summary>
            定位记录
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.Record.Controllers.RecordLocationController.Add(LY.Report.Core.Service.Record.Location.Input.RecordLocationAddInput)">
            <summary>
            新增
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.Resource.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.Resource.Controllers.CommonController">
            <summary>
            资源管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.Resource.Controllers.CommonController.GetIp">
            <summary>
            获取Ip
            </summary>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.Resource.Controllers.ImageController">
            <summary>
            图片管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.Resource.Controllers.ImageController.UploadImage(LY.Report.Core.Service.Resource.ImgGallery.Input.ResFileUploadInput)">
            <summary>
            上传图片
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.User.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.User.Controllers.AccountController">
            <summary>
            账号管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.AccountController.GetUserVerifyCode(System.String)">
            <summary>
            获取用户手机/邮箱验证码
            </summary>
            <param name="action">phone/email</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.AccountController.CheckUserVerifyCode(LY.Report.Core.Service.User.Account.Input.VerifyCodeInput)">
            <summary>
            校验用户账号验证码
            </summary>
            <param name="input">验证码</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.AccountController.GetVerifyCode(System.String)">
            <summary>
            获取手机/邮箱验证码
            </summary>
            <param name="account">手机/邮箱</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.AccountController.Login(LY.Report.Core.Service.User.Account.Input.LYUaLoginInput)">
            <summary>
            用户登录
            根据登录信息生成Token
            </summary>
            <param name="input">登录信息</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.AccountController.Refresh(System.String)">
            <summary>
            刷新Token
            以旧换新
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.AccountController.Logout(System.String)">
            <summary>
            统一登录退出
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Mobile.V1.User.Controllers.UserInfoController">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.UserInfoController.GetCurrUserInfo">
            <summary>
            获取当前用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.UserInfoController.Update(LY.Report.Core.Service.User.Info.Input.UserInfoUpdateInput)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.UserInfoController.UpdatePassword(LY.Report.Core.Service.User.Info.Input.UserInfoUpdatePasswordInput)">
            <summary>
            修改密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.UserInfoController.UpdatePortrait(LY.Report.Core.Service.User.Info.Input.UserInfoUpdatePortraitInput)">
            <summary>
            修改头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.UserInfoController.UntieWeChat">
            <summary>
            解绑微信
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Mobile.V1.User.Controllers.UserInfoController.UpdateAccount(LY.Report.Core.Service.User.Info.Input.UserInfoUpdateAccountInput)">
            <summary>
            修改手机/邮箱
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Open.V1.BaseApiController">
            <summary>
            基础API控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.BaseApiController">
            <summary>
            基础API控制器
            </summary>
                [AllowEupApi]
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Demo.Demo.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController">
            <summary>
            模板
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController.Add(LY.Report.Core.Service.Demo.Test.Input.DemoTestAddInput)">
            <summary>
            新增
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController.Update(LY.Report.Core.Service.Demo.Test.Input.DemoTestUpdateInput)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController.Get(System.String)">
            <summary>
            查询单条
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController.Get(LY.Report.Core.Service.Demo.Test.Input.DemoTestGetInput)">
            <summary>
            查询单条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Demo.Test.Input.DemoTestGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController.GetPageFenKu(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Demo.Test.Input.DemoTestGetFenKuInput})">
            <summary>
            查询分页 （分库多链接测试）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Demo.Controllers.DemoTestController.BatchDelete(System.String[])">
            <summary>
            批量删除
            </summary>
            <param name="testIds"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Mq.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Mq.Controllers.MqRecordController">
            <summary>
            消息记录
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Mq.Controllers.MqRecordController.GetSendRecord(System.String)">
            <summary>
            查询单条 推送
            </summary>
            <param name="carId"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Mq.Controllers.MqRecordController.GetPageSendRecord(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Mq.SendRecord.Input.MqSendRecordGetInput})">
            <summary>
            查询分页 推送
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Mq.Controllers.MqRecordController.GetReceiveRecord(System.String)">
            <summary>
            查询单条 接收
            </summary>
            <param name="carId"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Mq.Controllers.MqRecordController.GetPageReceiveRecord(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Mq.ReceiveRecord.Input.MqReceiveRecordGetInput})">
            <summary>
            查询分页 接收
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Mq.Controllers.MqRecordController.PublishEntityMsg(LY.Report.Core.Business.Mq.Input.MqSendMessageIn)">
            <summary>
            发布订阅模式
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Mq.Controllers.MqRecordController.PublishJsonMsg(LY.Report.Core.Business.Mq.Input.MqSendMessageIn)">
            <summary>
            发布订阅模式 路由2(最推荐)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Mq.Controllers.MqRecordController.SendQueueEntityMsg(LY.Report.Core.Business.Mq.Input.MqSendMessageIn)">
            <summary>
            发送接收模式
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Personnel.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.EmployeeController">
            <summary>
            员工管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.EmployeeController.Add(LY.Report.Core.Service.Personnel.Employee.Input.EmployeeAddInput)">
            <summary>
            新增员工
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.EmployeeController.SoftDelete(System.String)">
            <summary>
            删除员工
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.EmployeeController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除员工
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.EmployeeController.Get(System.String)">
            <summary>
            查询单条员工
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.EmployeeController.GetPage(LY.Report.Core.Common.Input.PageDynamicInput{LY.Report.Core.Model.Personnel.PersonnelEmployee})">
            <summary>
            查询分页员工
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.EmployeeController.Update(LY.Report.Core.Service.Personnel.Employee.Input.EmployeeUpdateInput)">
            <summary>
            修改员工
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.OrganizationController">
            <summary>
            组织架构
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.OrganizationController.Add(LY.Report.Core.Service.Personnel.Organization.Input.OrganizationAddInput)">
            <summary>
            新增组织架构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.OrganizationController.SoftDelete(System.String)">
            <summary>
            删除组织架构
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.OrganizationController.Get(System.String)">
            <summary>
            查询单条组织架构
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.OrganizationController.GetList(System.String)">
            <summary>
            查询组织架构列表
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.OrganizationController.Update(LY.Report.Core.Service.Personnel.Organization.Input.OrganizationUpdateInput)">
            <summary>
            修改组织架构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.PositionController">
            <summary>
            职位管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.PositionController.Add(LY.Report.Core.Service.Personnel.Position.Input.PositionAddInput)">
            <summary>
            新增职位
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.PositionController.SoftDelete(System.String)">
            <summary>
            删除职位
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.PositionController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除职位
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.PositionController.Get(System.String)">
            <summary>
            查询单条职位
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.PositionController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Model.Personnel.PersonnelPosition})">
            <summary>
            查询分页职位
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.Personnel.Controllers.PositionController.Update(LY.Report.Core.Service.Personnel.Position.Input.PositionUpdateInput)">
            <summary>
            修改职位
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.Resource.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.System.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.System.Controllers.SysParamConfigController">
            <summary>
            系统参数配置
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysParamConfigController.Get(System.String)">
            <summary>
            查询单条
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysParamConfigController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.System.ParamConfig.Input.SysParamConfigGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysParamConfigController.Add(LY.Report.Core.Service.System.ParamConfig.Input.SysParamConfigAddInput)">
            <summary>
            新增
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysParamConfigController.Update(LY.Report.Core.Service.System.ParamConfig.Input.SysParamConfigUpdateInput)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysParamConfigController.SoftDelete(System.String)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysParamConfigController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.System.Controllers.SysWebConfigController">
            <summary>
            网站配置
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysWebConfigController.Get(System.String)">
            <summary>
            查询单条
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysWebConfigController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.System.WebConfig.Input.SysWebConfigGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysWebConfigController.Add(LY.Report.Core.Service.System.WebConfig.Input.SysWebConfigAddInput)">
            <summary>
            新增
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysWebConfigController.Update(LY.Report.Core.Service.System.WebConfig.Input.SysWebConfigUpdateInput)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysWebConfigController.SoftDelete(System.String)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.System.Controllers.SysWebConfigController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.User.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1.User.Controllers.AccountController">
            <summary>
            账号管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.User.Controllers.AccountController.GetImgVerifyCode(System.String)">
            <summary>
            获取图片验证码
            </summary>
            <param name="lastKey">上次验证码键</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.User.Controllers.AccountController.GetCaptcha">
            <summary>
            获取验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1.User.Controllers.AccountController.CheckCaptcha(LY.Report.Core.Common.Captcha.Dtos.CaptchaInput)">
            <summary>
            检查验证数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Other.V1Resource.Controllers.FileController">
            <summary>
            文件管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Other.V1Resource.Controllers.FileController.UploadImage(LY.Report.Core.Service.Resource.ImgGallery.Input.ResFileUploadInput)">
            <summary>
            上传文档图片
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Auth.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController">
            <summary>
            接口管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController.Add(LY.Report.Core.Service.Auth.Api.Input.ApiAddInput)">
            <summary>
            新增接口
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController.SoftDelete(System.String)">
            <summary>
            删除接口
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除接口
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController.Get(System.String)">
            <summary>
            查询单条接口
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController.GetList(System.String,System.String)">
            <summary>
            查询全部接口
            </summary>
            <param name="key"></param>
            <param name="apiVersion">版本号</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Auth.Api.Input.ApiGetInput})">
            <summary>
            查询分页接口
            </summary>
            <param name="model">分页模型</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController.Update(LY.Report.Core.Service.Auth.Api.Input.ApiUpdateInput)">
            <summary>
            修改接口
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ApiController.Sync(LY.Report.Core.Service.Auth.Api.Input.ApiSyncInput)">
            <summary>
            同步接口
            支持新增和修改接口
            根据接口是否存在自动禁用和启用api
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController">
            <summary>
            权限管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.AddGroup(LY.Report.Core.Service.Auth.Permission.Input.PermissionAddGroupInput)">
            <summary>
            新增分组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.AddMenu(LY.Report.Core.Service.Auth.Permission.Input.PermissionAddMenuInput)">
            <summary>
            新增菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.AddApi(LY.Report.Core.Service.Auth.Permission.Input.PermissionAddApiInput)">
            <summary>
            新增接口
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.AddDot(LY.Report.Core.Service.Auth.Permission.Input.PermissionAddDotInput)">
            <summary>
            新增权限点
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.Assign(LY.Report.Core.Service.Auth.Permission.Input.PermissionAssignInput)">
            <summary>
            保存角色权限
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.SaveTenantPermissions(LY.Report.Core.Service.Auth.Permission.Input.PermissionSaveTenantPermissionsInput)">
            <summary>
            保存租户权限
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.SoftDelete(System.String)">
            <summary>
            删除权限
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.Delete(System.String)">
            <summary>
            彻底删除权限
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetList(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            查询权限列表
            </summary>
            <param name="key"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetGroup(System.String)">
            <summary>
            查询单条分组
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetMenu(System.String)">
            <summary>
            查询单条菜单
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetApi(System.String)">
            <summary>
            查询单条接口
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetDot(System.String)">
            <summary>
            查询单条权限点
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetPermissionList">
            <summary>
            查询角色权限-权限列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetRolePermissionList(System.String)">
            <summary>
            查询角色权限
            </summary>
            <param name="roleId"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetTenantPermissionList(System.String)">
            <summary>
            查询租户权限
            </summary>
            <param name="tenantId"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.GetPermissionsPointMenu">
            <summary>
            权限点和菜单
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.ValidatePermissions(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Auth.Auth.Input.ValidatePermissionsInput})">
            <summary>
            验证权限
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.UpdateGroup(LY.Report.Core.Service.Auth.Permission.Input.PermissionUpdateGroupInput)">
            <summary>
            修改分组
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.UpdateMenu(LY.Report.Core.Service.Auth.Permission.Input.PermissionUpdateMenuInput)">
            <summary>
            修改菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.UpdateApi(LY.Report.Core.Service.Auth.Permission.Input.PermissionUpdateApiInput)">
            <summary>
            修改接口
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.PermissionController.UpdateDot(LY.Report.Core.Service.Auth.Permission.Input.PermissionUpdateDotInput)">
            <summary>
            修改权限点
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.RoleController">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.RoleController.Get(System.String)">
            <summary>
            查询单条角色
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.RoleController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Auth.Role.Input.RoleGetListInput})">
            <summary>
            查询分页角色
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.RoleController.Add(LY.Report.Core.Service.Auth.Role.Input.RoleAddInput)">
            <summary>
            新增角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.RoleController.Update(LY.Report.Core.Service.Auth.Role.Input.RoleUpdateInput)">
            <summary>
            修改角色
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.RoleController.SoftDelete(System.String)">
            <summary>
            删除角色
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.RoleController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除角色
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController">
            <summary>
            用户角色管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController.GetUserRoleInfo(System.String)">
            <summary>
            获取单条记录
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController.GetUserRoleList(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Auth.UserRole.Input.UserRoleGetListInput})">
            <summary>
            获取分页列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController.GetRoleInfo">
            <summary>
            获取角色数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController.GetUserInfo(System.String)">
            <summary>
            获取用户数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController.AddUserRoleInfo(LY.Report.Core.Service.Auth.UserRole.Input.UserRoleAddInput)">
            <summary>
            新增
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController.UpdateUserRoleInfo(LY.Report.Core.Service.Auth.UserRole.Input.UserRoleUpdateInput)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController.SoftDelete(System.String)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.UserRoleController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController">
            <summary>
            视图管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController.Add(LY.Report.Core.Service.Auth.View.Input.ViewAddInput)">
            <summary>
            新增视图
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController.SoftDelete(System.String)">
            <summary>
            删除视图
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除视图
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController.Get(System.String)">
            <summary>
            查询单条视图
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController.GetList(LY.Report.Core.Service.Auth.View.Input.ViewGetInput)">
            <summary>
            查询全部视图
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Auth.View.Input.ViewGetInput})">
            <summary>
            查询分页视图
            </summary>
            <param name="model">分页模型</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController.Update(LY.Report.Core.Service.Auth.View.Input.ViewUpdateInput)">
            <summary>
            修改视图
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Auth.Controllers.ViewController.Sync(LY.Report.Core.Service.Auth.View.Input.ViewSyncInput)">
            <summary>
            同步视图
            支持新增和修改视图
            根据视图是否存在自动禁用和启用视图
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.BaseApiController">
            <summary>
            基础API控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Product.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Product.Controllers.AbnormalController">
            <summary>
            异常管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Product.Controllers.AbnormalController.Add(LY.Report.Core.Service.Product.Abnormals.Input.ProductAbnormalAddInput)">
            <summary>
            新增
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Product.Controllers.AbnormalController.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Product.Controllers.AbnormalController.BatchDelete(System.String[])">
            <summary>
            批量删除
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Product.Controllers.AbnormalController.Get(System.String)">
            <summary>
            查询单条
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Product.Controllers.AbnormalController.Get(LY.Report.Core.Service.Product.Abnormals.Input.ProductAbnormalGetInput)">
            <summary>
            查询单条(实体)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Product.Controllers.AbnormalController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Product.Abnormals.Input.ProductAbnormalGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Record.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Record.Controllers.RecordLoginController">
            <summary>
            登录记录
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Record.Controllers.RecordLoginController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Record.Login.Input.RecordLoginGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Record.Controllers.RecordOperationController">
            <summary>
            操作记录
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Record.Controllers.RecordOperationController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Record.Operation.Input.RecordOperationGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Resource.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.Resource.Controllers.ImageController">
            <summary>
            图片管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Resource.Controllers.ImageController.GetListGetPageList(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.Resource.ImgGallery.Input.ResImgGalleryGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Resource.Controllers.ImageController.UploadImage(LY.Report.Core.Service.Resource.ImgGallery.Input.ResFileUploadInput)">
            <summary>
            上传图片
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Resource.Controllers.ImageController.SoftDelete(System.String)">
             <summary>
            删除
             </summary>
             <param name="imgId"></param>
             <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.Resource.Controllers.ImageController.BatchSoftDelete(System.String[])">
             <summary>
            批量删除
             </summary>
             <param name="ids"></param>
             <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.System.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.System.Controllers.CacheController">
            <summary>
            缓存管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.CacheController.List">
            <summary>
            获取缓存列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.CacheController.Clear(System.String)">
            <summary>
            清除缓存
            </summary>
            <param name="cacheKey"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.System.Controllers.SysRegionController">
            <summary>
            地区配置
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.SysRegionController.Get(LY.Report.Core.Service.System.Region.Input.SysRegionGetInput)">
            <summary>
            查询单条
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.SysRegionController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.System.Region.Input.SysRegionGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.SysRegionController.GetSelectList(System.Int32)">
            <summary>
            获取下拉菜单数据
            </summary>
            <param name="parentId">父级Id</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.SysRegionController.Add(LY.Report.Core.Service.System.Region.Input.SysRegionAddInput)">
            <summary>
            新增
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.SysRegionController.Update(LY.Report.Core.Service.System.Region.Input.SysRegionUpdateInput)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.SysRegionController.SoftDelete(System.String)">
            <summary>
            删除
            </summary>
            <param name="regionId">地区id</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.SysRegionController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除
            </summary>
            <param name="regionIds"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.System.Controllers.TenantController">
            <summary>
            租户管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.TenantController.Add(LY.Report.Core.Service.System.Tenant.Input.TenantAddInput)">
            <summary>
            新增租户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.TenantController.Delete(System.String)">
            <summary>
            彻底删除租户
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.TenantController.SoftDelete(System.String)">
            <summary>
            删除租户
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.TenantController.BatchSoftDelete(System.String[])">
            <summary>
            批量删除租户
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.TenantController.Get(System.String)">
            <summary>
            查询单条租户
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.TenantController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.System.Tenant.Input.TenantGetInput})">
            <summary>
            查询分页租户
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.System.Controllers.TenantController.Update(LY.Report.Core.Service.System.Tenant.Input.TenantUpdateInput)">
            <summary>
            修改租户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.User.BaseAreaController">
            <summary>
            域控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.User.Controllers.AccountController">
            <summary>
            账号管理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.AccountController.Login(LY.Report.Core.Service.User.Account.Input.LYUaLoginInput)">
            <summary>
            用户登录
            根据登录信息生成Token
            </summary>
            <param name="input">登录信息</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.AccountController.Refresh(System.String)">
            <summary>
            刷新Token
            以旧换新
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.AccountController.Logout(System.String)">
            <summary>
            统一登录退出
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.AccountController.Register(LY.Report.Core.Service.User.Info.Input.UserInfoAddInput)">
            <summary>
            注册账号（添加账号）
            </summary>
            <param name="userInfoAddInput"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController.GetPage(LY.Report.Core.Common.Input.PageInput{LY.Report.Core.Service.User.Info.Input.UserInfoGetInput})">
            <summary>
            查询分页
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController.GetSelectList(LY.Report.Core.Service.User.Info.Input.UserInfoGetSelectInput)">
            <summary>
            获取用户下拉
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController.GetCurrUserInfo">
            <summary>
            获取当前用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController.Update(LY.Report.Core.Service.User.Info.Input.UserInfoUpdateInput)">
            <summary>
            修改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController.UpdatePassword(LY.Report.Core.Service.User.Info.Input.UserInfoUpdatePasswordInput)">
            <summary>
            修改密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController.ResetSysPassword(LY.Report.Core.Service.User.Info.Input.UserInfoResetPasswordInput)">
            <summary>
            重置密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController.ResetEmail(LY.Report.Core.Service.User.Info.Input.UserInfoResetEmailInput)">
            <summary>
            重置邮箱
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Areas.Sys.V1.User.Controllers.UserInfoController.ResetPhone(LY.Report.Core.Service.User.Info.Input.UserInfoResetPhoneInput)">
            <summary>
            重置手机
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Attributes.AllowEupApiAttribute">
            <summary>
            允许统一登录 api调用
            </summary>
        </member>
        <member name="T:LY.Report.Core.Attributes.IsLoginAttribute">
            <summary>
            启用登录
            </summary>
        </member>
        <member name="T:LY.Report.Core.Attributes.NoOperationLogAttribute">
            <summary>
            禁用操作日志
            </summary>
        </member>
        <member name="T:LY.Report.Core.Attributes.NoPermissionAttribute">
            <summary>
            无需权限认证
            </summary>
        </member>
        <member name="T:LY.Report.Core.Attributes.ValidatePermissionAttribute">
            <summary>
            启用权限验证
            </summary>
        </member>
        <member name="T:LY.Report.Core.Attributes.ValidateInputAttribute">
            <summary>
            输入模型验证
            </summary>
        </member>
        <member name="T:LY.Report.Core.Attributes.VersionRouteAttribute">
            <summary>
            自定义路由 /api/{group}/{version}/[area]/[controler]/[action]
            </summary>
        </member>
        <member name="T:LY.Report.Core.Auth.IPermissionHandler">
            <summary>
            权限处理接口
            </summary>
        </member>
        <member name="M:LY.Report.Core.Auth.IPermissionHandler.ValidateAsync(System.String,System.String)">
            <summary>
            权限验证
            </summary>
            <param name="api"></param>
            <param name="httpMethod"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Auth.PermissionHandler">
            <summary>
            权限处理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Auth.PermissionHandler.ValidateAsync(System.String,System.String)">
            <summary>
            权限验证
            </summary>
            <param name="api">接口路径</param>
            <param name="httpMethod">http请求方法</param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Auth.PermissionHandler.IsNoCheckPermission">
            <summary>
            特殊权限免校验
            </summary>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Auth.ResponseAuthenticationHandler">
            <summary>
            响应认证处理器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Controllers.Base.BaseApiController">
            <summary>
            基础API控制器
            </summary>
        </member>
        <member name="T:LY.Report.Core.Controllers.Base.BaseController">
            <summary>
            基础控制器
            </summary>
        </member>
        <member name="M:LY.Report.Core.Controllers.HomeController.Index">
            <summary>
            首页
            </summary>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Db.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="M:LY.Report.Core.Db.DBServiceCollectionExtensions.AddDbAsync(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            添加数据库
            </summary>
            <param name="services"></param>
            <param name="env"></param>
        </member>
        <member name="M:LY.Report.Core.Db.DBServiceCollectionExtensions.CreateMultiDbBuilder(LY.Report.Core.Common.Configs.MultiDb)">
            <summary>
            创建多数据库构建器
            </summary>
            <param name="multiDb"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Enums.ApiGroup">
            <summary>
            接口分组/分类
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.ApiGroup.Mobile">
            <summary>
            手机端接口
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.ApiGroup.Sys">
            <summary>
            电脑端（后台）接口
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.ApiGroup.Open">
            <summary>
            第三方开放接口
            </summary>
        </member>
        <member name="T:LY.Report.Core.Enums.ApiVersion">
            <summary>
            接口版本
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.ApiVersion.Other_V1">
            <summary>
            Ohter接口_版本1
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.ApiVersion.M_V1">
            <summary>
            手机端接口_版本1
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.ApiVersion.S_V1">
            <summary>
            电脑端(后台)接口_版本1
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.ApiVersion.Open_V1">
            <summary>
            第三方接口_版本1
            </summary>
        </member>
        <member name="T:LY.Report.Core.Enums.StatusCodes">
            <summary>
            状态码枚举
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.StatusCodes.Status0NotOk">
            <summary>
            操作失败
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.StatusCodes.Status1Ok">
            <summary>
            操作成功
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.StatusCodes.Status401Unauthorized">
            <summary>
            未登录（需要重新登录）
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.StatusCodes.Status403Forbidden">
            <summary>
            权限不足
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.StatusCodes.Status404NotFound">
            <summary>
            资源不存在
            </summary>
        </member>
        <member name="F:LY.Report.Core.Enums.StatusCodes.Status500InternalServerError">
            <summary>
            系统内部错误（非业务代码里显式抛出的异常，例如由于数据不正确导致空指针异常、数据库异常等等）
            </summary>
        </member>
        <member name="T:LY.Report.Core.Extensions.NullToEmptyStringResolver">
            <summary>
            统一返回的null序列化为空
            </summary>
        </member>
        <member name="M:LY.Report.Core.Extensions.NullToEmptyStringResolver.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary>
            创建属性
            </summary>
            <param name="type">类型</param>
            <param name="memberSerialization">序列化成员</param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Extensions.NullToEmptyStringValueProvider">
            <summary>
            统一返回的null序列化为空
            </summary>
        </member>
        <member name="M:LY.Report.Core.Extensions.NullToEmptyStringValueProvider.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            构造函数
            </summary>
            <param name="propertyInfo"></param>
        </member>
        <member name="M:LY.Report.Core.Extensions.NullToEmptyStringValueProvider.GetValue(System.Object)">
            <summary>
            获取Value
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Extensions.NullToEmptyStringValueProvider.SetValue(System.Object,System.Object)">
            <summary>
            设置Value
            </summary>
            <param name="target"></param>
            <param name="value"></param>
        </member>
        <member name="M:LY.Report.Core.Extensions.RateLimitServiceCollectionExtensions.AddIpRateLimit(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,LY.Report.Core.Common.Configs.CacheConfig)">
            <summary>
            添加Ip限流
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <param name="cacheConfig"></param>
        </member>
        <member name="T:LY.Report.Core.Extensions.UploadConfigApplicationBuilderExtensions">
            <summary>
            上传配置
            </summary>
        </member>
        <member name="T:LY.Report.Core.Filters.AdminExceptionFilter">
            <summary>
            Admin异常错误过滤
            </summary>
        </member>
        <member name="T:LY.Report.Core.Helper.ApiHelper">
            <summary>
            Api帮助类
            </summary>
        </member>
        <member name="P:LY.Report.Core.Helper.ApiHelperDto.Label">
            <summary>
            接口名称
            </summary>
        </member>
        <member name="P:LY.Report.Core.Helper.ApiHelperDto.Path">
            <summary>
            接口地址
            </summary>
        </member>
        <member name="T:LY.Report.Core.Helper.ILogHandler">
            <summary>
            操作日志处理接口
            </summary>
        </member>
        <member name="M:LY.Report.Core.Helper.ILogHandler.LogAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            写操作日志
            </summary>
            <param name="context"></param>
            <param name="next"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Helper.LogHandler">
            <summary>
            操作日志处理
            </summary>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.AddMqAsync(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            添加消息队列
            </summary>
            <param name="services"></param>
            <param name="env"></param>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.AddListener(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment)">
            <summary>
            监听消息
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.AdvancedConsumeListener(EasyNetQ.IBus,System.String,System.String,System.String,System.Func{System.Byte[],EasyNetQ.MessageProperties,EasyNetQ.MessageReceivedInfo,System.Threading.Tasks.Task{EasyNetQ.Consumer.AckStrategy}})">
            <summary>
            高级订阅
            </summary>
            <param name="bus"></param>
            <param name="sendSysName"></param>
            <param name="receiveSysName"></param>
            <param name="funcName"></param>
            <param name="onMessage"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.AdvancedConsumeCallBackListener(EasyNetQ.IBus,System.String,System.Func{System.Byte[],EasyNetQ.MessageProperties,EasyNetQ.MessageReceivedInfo,System.Threading.Tasks.Task{EasyNetQ.Consumer.AckStrategy}},System.String)">
            <summary>
            高级订阅 回调
            </summary>
            <param name="bus"></param>
            <param name="receiveSysName"></param>
            <param name="funcName"></param>
            <param name="onMessage"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.SendReceiveListener``1(EasyNetQ.IBus,System.String,System.String,System.String,System.Func{``0,System.Threading.Tasks.Task{EasyNetQ.Consumer.AckStrategy}})">
            <summary>
            发送接收
            </summary>
            <typeparam name="T"></typeparam>
            <param name="bus"></param>
            <param name="sendSysName"></param>
            <param name="receiveSysName"></param>
            <param name="funcName"></param>
            <param name="onMessage"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.ConsumeHandleMallAsync(System.Byte[],EasyNetQ.MessageProperties,EasyNetQ.MessageReceivedInfo)">
            <summary>
            处理订阅(商城)
            </summary>
            <param name="data"></param>
            <param name="properties"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.ConsumeHandlePayGatewayAsync(System.Byte[],EasyNetQ.MessageProperties,EasyNetQ.MessageReceivedInfo)">
            <summary>
            处理订阅(支付)
            </summary>
            <param name="data"></param>
            <param name="properties"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.ConsumeHandleXerpAsync(System.Byte[],EasyNetQ.MessageProperties,EasyNetQ.MessageReceivedInfo)">
            <summary>
            处理订阅(Xerp)
            </summary>
            <param name="data"></param>
            <param name="properties"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.ConsumeHandleCallBackAsync(System.Byte[],EasyNetQ.MessageProperties,EasyNetQ.MessageReceivedInfo)">
            <summary>
            处理订阅(回调消息处理)
            </summary>
            <param name="data"></param>
            <param name="properties"></param>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.Mq.MqServiceExtensions.HandleReceiveAsync(LY.Mq.Message.MqMessage)">
            <summary>
            处理发送接收
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Helper.TimerJobHelper">
            <summary>
            Api帮助类
            </summary>
        </member>
        <member name="M:LY.Report.Core.Helper.TimerJobHelper.#ctor(System.TimeSpan,System.TimeSpan,LY.Report.Core.Util.Timer.IJobExecutor)">
            <summary>
            构造函数
            </summary>
            <param name="dueTime">开始执行时间</param>
            <param name="periodTime">间隔时间</param>
            <param name="jobExcutor">任务执行者</param>
        </member>
        <member name="M:LY.Report.Core.Helper.TimerJobHelper.StartAsync(System.Threading.CancellationToken)">
            <summary>
            系统级任务执行启动
            StartAsync和StopAsync 为 IHostService 系统服务接口，表示托管服务的开始和结束。
            </summary>
            <returns></returns>
        </member>
        <member name="M:LY.Report.Core.Helper.TimerJobHelper.StopAsync(System.Threading.CancellationToken)">
            <summary>
            系统级任务执行关闭
            StartAsync和StopAsync 为 IHostService 系统服务接口，表示托管服务的开始和结束。
            </summary>
            <returns></returns>
        </member>
        <member name="T:LY.Report.Core.Helper.TimerJob.TestListTimerJob">
            <summary>
            需在ConfigureServices注册services.AddHostedService&lt;TestListJobTrigger&gt;();
            </summary>
        </member>
        <member name="T:LY.Report.Core.Helper.TimerJob.TestTimerJob">
            <summary>
            需在ConfigureServices注册services.AddHostedService&lt;TestTimerJob&gt;();
            </summary>
        </member>
        <member name="M:LY.Report.Core.Helper.TimerJob.TestTimerJob.#ctor(LY.Report.Core.Service.Demo.Test.IDemoTestService)">
            <summary>
            触发器 触发时间，间隔，执行者
            </summary>
        </member>
        <member name="T:LY.Report.Core.RegisterModules.IOCServiceExtensions">
            <summary>
            添加IOC注入
            </summary>
        </member>
    </members>
</doc>
